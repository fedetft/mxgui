#pragma once
//This font has been converted from BDF/TTF font format to .h
//using the fontrendering utility which is part of mxgui,
//the graphics library of the Miosix kernel.
//Do not modify this file, it has been automatically generated.

const bool droid11IsAntialiased=true;
const bool droid11IsFixedWidth=false;
const unsigned char droid11Height=12;
const unsigned char droid11DataSize=32;
const unsigned char droid11NumBlocks=2;

// The start of range i is blocks[2*i], its size is at blocks[2*i+1]
const unsigned int droid11Blocks[]={
 0x20,0x5f,
 0xfffd,0x1
};

//The first byte of character i is droid11Data[droid11Offset[i]]
const unsigned short droid11Offset[]={
 0,3,6,11,18,24,33,41,
 44,47,50,56,61,64,68,71,
 76,82,88,94,100,106,112,118,
 124,130,136,139,142,148,154,160,
 165,175,183,189,196,203,208,213,
 220,227,231,234,241,246,255,262,
 270,275,283,289,294,300,307,315,
 325,332,340,346,349,354,357,363,
 368,374,380,386,391,397,403,407,
 413,419,421,423,428,430,440,446,
 452,458,464,468,473,477,483,489,
 497,503,509,514,518,523,527,533,
 544
};

const unsigned int droid11Data[]={
 0,0,0, //U+20 (   )
 0,0x3cbfc,0, //U+21 ( ! )
 0,0xbc,0,0xbc,0, //U+22 ( " )
 0x30c0,0x3b0c0,0x7fe4,0x3b0ec,0x1bfd0,0x30ec,0x30c0, //U+23 ( # )
 0x303d0,0x30930,0xbbeb8,0x31830,0xf020,0, //U+24 ( $ )
 0x1f8,0x3030c,0xe2f4,0x2c00,0x380,0x1f8b0,0x30c0c,0x2f400,0, //U+25 ( % )
 0x1f400,0x30df4,0x30b0c,0x32e4c,0x1e0b4,0x2e000,0x21c00,0, //U+26 ( & )
 0,0xbc,0, //U+27 ( ' )
 0x6ff90,0x39006c,0, //U+28 ( ( )
 0x39006c,0x6ff90,0, //U+29 ( ) )
 0x90,0xec0,0x2fc,0xec0,0x90,0, //U+2a ( * )
 0xc00,0xc00,0xbfc0,0xc00,0x800, //U+2b ( + )
 0x340000,0xb0000,0, //U+2c ( , )
 0x3000,0x3000,0x3000,0, //U+2d ( - )
 0,0x3c000,0, //U+2e ( . )
 0x38000,0x7d00,0x2d0,0x1c,0, //U+2f ( / )
 0xbfe0,0x24018,0x3000c,0x24018,0xbfe0,0, //U+30 ( 0 )
 0,0x20,0x18,0x3fffc,0,0, //U+31 ( 1 )
 0x34014,0x3900c,0x3340c,0x30d0c,0x302f0,0x10000, //U+32 ( 2 )
 0x20014,0x3030c,0x3030c,0x2474c,0xb8b4,0, //U+33 ( 3 )
 0x3800,0x3740,0x3064,0x3fffc,0x3000,0, //U+34 ( 4 )
 0x303f8,0x3030c,0x3030c,0x2460c,0xbc04,0, //U+35 ( 5 )
 0xbf90,0x24634,0x3030c,0x3430c,0xfc04,0, //U+36 ( 6 )
 0xc,0x3800c,0x780c,0x79c,0x2c,0, //U+37 ( 7 )
 0x1f8f4,0x30b4c,0x3030c,0x30b4c,0xf8f4,0, //U+38 ( 8 )
 0x103f0,0x30c1c,0x30c0c,0x18918,0x6fe0,0, //U+39 ( 9 )
 0,0x3c3c0,0, //U+3a ( : )
 0x340000,0xb03c0,0, //U+3b ( ; )
 0,0xc00,0x2600,0x6240,0xc0c0,0, //U+3c ( < )
 0,0x3300,0x3300,0x3300,0x3300,0, //U+3d ( = )
 0,0xc0c0,0x6240,0x2600,0xc00,0, //U+3e ( > )
 0x8,0x3cd0c,0x30c,0xf4,0, //U+3f ( ? )
 0,0x1ff80,0x70070,0xc7f18,0xcc1cc,0xc80cc,0xcbfcc,0xc074,0x7f90,0, //U+40 ( @ )
 0x39000,0x7d00,0x32e0,0x302c,0x32e0,0x7d00,0x39000,0, //U+41 ( A )
 0x3fffc,0x3030c,0x3030c,0x3475c,0xfcf4,0, //U+42 ( B )
 0x7f80,0x1d074,0x3401c,0x3000c,0x3000c,0x30008,0, //U+43 ( C )
 0x3fffc,0x3000c,0x3000c,0x3400c,0x1d074,0x6fd0,0, //U+44 ( D )
 0x3fffc,0x3030c,0x3030c,0x3030c,0, //U+45 ( E )
 0x3fffc,0x30c,0x30c,0x30c,0, //U+46 ( F )
 0x7fd0,0x1d074,0x3000c,0x30c0c,0x30c0c,0x3fc08,0, //U+47 ( G )
 0x3fffc,0x300,0x300,0x300,0x300,0x3fffc,0, //U+48 ( H )
 0x20008,0x3fffc,0x20008,0, //U+49 ( I )
 0x300000,0x1ffffc,0, //U+4a ( J )
 0x3fffc,0x500,0xb40,0x3890,0x1d034,0x3000c,0, //U+4b ( K )
 0x3fffc,0x30000,0x30000,0x20000,0, //U+4c ( L )
 0x3fffc,0xb8,0x1f80,0x2e400,0x2e400,0x1a40,0xb8,0x3fffc,0, //U+4d ( M )
 0x3fffc,0x78,0x780,0x2d00,0x2d000,0x3fffc,0, //U+4e ( N )
 0x7fd0,0x1d074,0x3000c,0x3000c,0x3000c,0x1d074,0x7fd0,0, //U+4f ( O )
 0x3fffc,0xc0c,0xd1c,0x3f4,0, //U+50 ( P )
 0x7fd0,0x1d074,0x3000c,0x3000c,0xf000c,0x39d074,0x7fd0,0, //U+51 ( Q )
 0x3fffc,0xc0c,0xc0c,0xb918,0x342f0,0, //U+52 ( R )
 0x301f4,0x3071c,0x34d0c,0x1f808,0, //U+53 ( S )
 0xc,0xc,0x3fffc,0xc,0xc,0, //U+54 ( T )
 0xbffc,0x28000,0x30000,0x30000,0x28000,0xbffc,0, //U+55 ( U )
 0x2c,0x7d0,0xb800,0x34000,0xb800,0x7d0,0x2c,0, //U+56 ( V )
 0x1bc,0x1be90,0x3d000,0x6f90,0x7c,0x6f90,0x3d000,0xbe90,0x1bc,0, //U+57 ( W )
 0x3401c,0xe0b4,0x1e80,0x1e80,0x1e0b0,0x3401c,0, //U+58 ( X )
 0x1c,0xb0,0x740,0x3fd00,0x740,0xb0,0x1c,0, //U+59 ( Y )
 0x3800c,0x3740c,0x30a0c,0x301dc,0x3002c,0, //U+5a ( Z )
 0,0x3ffffc,0x30000c, //U+5b ( [ )
 0x2c,0x6d0,0x7800,0x34000,0, //U+5c ( \ )
 0x30000c,0x3ffffc,0, //U+5d ( ] )
 0xd00,0x780,0x78,0x78,0x780,0xd00, //U+5e ( ^ )
 0x300000,0x300000,0x300000,0x300000,0x300000, //U+5f ( _ )
 0,0,0x3,0x9,0,0, //U+60 ( ` )
 0x1f040,0x318c0,0x30cc0,0x24cc0,0x3ff40,0, //U+61 ( a )
 0x3fffc,0x24180,0x300c0,0x341c0,0xbe00,0, //U+62 ( b )
 0xbe00,0x341c0,0x300c0,0x300c0,0, //U+63 ( c )
 0xbe00,0x341c0,0x300c0,0x24180,0x3fffc,0, //U+64 ( d )
 0xbe00,0x24d80,0x30cc0,0x30cc0,0x20f00,0, //U+65 ( e )
 0x80,0x3fff8,0x8c,0xc, //U+66 ( f )
 0x7c1f40,0xc3f0c0,0x8330c0,0xc31fc0,0x3e0080,0, //U+67 ( g )
 0x3fffc,0x180,0xc0,0x1c0,0x3ff40,0, //U+68 ( h )
 0x3ffcc,0, //U+69 ( i )
 0xbfffcc,0, //U+6a ( j )
 0x3fffc,0x2c00,0xbb00,0x381c0,0x10040, //U+6b ( k )
 0x3fffc,0, //U+6c ( l )
 0x3ffc0,0x140,0xc0,0x1c0,0x3ff40,0x180,0xc0,0x1c0,0x3ff40,0, //U+6d ( m )
 0x3ffc0,0x180,0xc0,0x1c0,0x3ff40,0, //U+6e ( n )
 0xbe00,0x341c0,0x300c0,0x341c0,0xbe00,0, //U+6f ( o )
 0xffffc0,0x24180,0x300c0,0x341c0,0xbe00,0, //U+70 ( p )
 0xbe00,0x341c0,0x300c0,0x24180,0xffffc0,0, //U+71 ( q )
 0x3ffc0,0x180,0xc0,0, //U+72 ( r )
 0x30b40,0x30cc0,0x324c0,0x1e080,0, //U+73 ( s )
 0x80,0x3fff4,0x300c0,0, //U+74 ( t )
 0x1ffc0,0x34000,0x30000,0x24000,0x3ffc0,0, //U+75 ( u )
 0x6c0,0xb900,0x38000,0xb900,0x6c0,0, //U+76 ( v )
 0x6fc0,0x3d400,0xbd00,0x2c0,0xbe00,0x3d400,0x6fc0,0x40, //U+77 ( w )
 0x20080,0x2d780,0x3c00,0x2d780,0x20080,0, //U+78 ( x )
 0xc007c0,0xe1b900,0x2f8000,0x1b900,0x7c0,0, //U+79 ( y )
 0x38080,0x3b4c0,0x31ec0,0x302c0,0, //U+7a ( z )
 0,0xc00,0x1ff3f8,0x30000c, //U+7b ( { )
 0,0,0xfffffc,0,0, //U+7c ( | )
 0x30000c,0x2fdff4,0x3000,0, //U+7d ( } )
 0,0xb00,0x700,0xd00,0xe00,0, //U+7e ( ~ )
 0x400,0x2e00,0xbf80,0x2ffe0,0xbff78,0x1dc63d,0xbf478,0x2ffe0,0xbf80,0x2e00,0x400 //U+fffd ( ï¿½ )
};
